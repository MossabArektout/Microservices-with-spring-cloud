spring.application.name=discovery-service
server.port=8761

# Eureka server does not register itself
eureka.client.fetch-registry=false
eureka.client.register-with-eureka=false

# Enable Prometheus endpoint
management.endpoints.web.exposure.include=health,info,prometheus,metrics, loggers, env
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true

# Add application label for better identification in Prometheus
management.metrics.tags.application=${spring.application.name}

# OpenTelemetry Configuration
management.tracing.sampling.probability=1.0
management.otlp.metrics.export.url=http://tempo:4318/v1/metrics
management.otlp.tracing.endpoint=http://tempo:4318/v1/traces

# OpenTelemetry Exporter
otel.exporter.otlp.endpoint=http://tempo:4318
otel.exporter.otlp.protocol=grpc
otel.service.name=${spring.application.name}
otel.metrics.exporter=otlp
otel.traces.exporter=otlp
otel.logs.exporter=otlp

# Spring Boot Actuator
management.endpoint.health.show-details=always
# Micrometer Tracing
management.observations.enabled=true